ARM Linker, 5.02 [Build 28] [MDK-ARM Lite]

==============================================================================

Section Cross References

    startup.o(RESET) refers to task.o(.text) for main
    port.o(.text) refers to portasm.o(PORT_ASM) for vPortStartFirstTask
    port.o(.text) refers to port.o(.data) for ulCriticalNesting
    queue.o(.text) refers to port.o(.text) for vPortEnterCritical
    queue.o(.text) refers to tasks.o(.text) for xTaskRemoveFromEventList
    queue.o(.text) refers to portasm.o(PORT_ASM) for vPortYield
    queue.o(.text) refers to list.o(.text) for vListInitialise
    queue.o(.text) refers to heap_2.o(.text) for pvPortMalloc
    queue.o(.text) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    tasks.o(.text) refers to list.o(.text) for vListInitialise
    tasks.o(.text) refers to port.o(.text) for vPortEnterCritical
    tasks.o(.text) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(.text) refers to aeabi_memset.o(.text) for __aeabi_memset
    tasks.o(.text) refers to heap_2.o(.text) for pvPortMalloc
    tasks.o(.text) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(.text) refers to tasks.o(.data) for pxDelayedTaskList
    heap_2.o(.text) refers to tasks.o(.text) for vTaskSuspendAll
    heap_2.o(.text) refers to heap_2.o(.bss) for ucHeap
    heap_2.o(.text) refers to heap_2.o(.data) for xStart
    portasm.o(PORT_ASM) refers to tasks.o(.data) for pxCurrentTCB
    portasm.o(PORT_ASM) refers to port.o(.data) for ulCriticalNesting
    portasm.o(PORT_ASM) refers to tasks.o(.text) for vTaskSwitchContext
    rt_memcpy.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    __main.o(!!!main) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to task.o(.text) for main
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    rtentry4.o(.ARM.exidx) refers to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to sys_stackheap.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002A) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000008) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap.o(.text) refers to use_no_semi.o(.text) for __I$use$semihosting
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$0000000E) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000024) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000025) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to __raise.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing port.o(.text), (504 bytes).
    Removing port.o(.data), (4 bytes).
    Removing queue.o(.text), (2696 bytes).
    Removing list.o(.text), (276 bytes).
    Removing tasks.o(.text), (7120 bytes).
    Removing tasks.o(.bss), (180 bytes).
    Removing tasks.o(.data), (60 bytes).
    Removing heap_2.o(.text), (524 bytes).
    Removing heap_2.o(.bss), (8192 bytes).
    Removing heap_2.o(.data), (24 bytes).
    Removing portasm.o(PORT_ASM), (396 bytes).

11 unused section(s) (total 19976 bytes) removed from the image.

==============================================================================

Memory Map of the image

  Image Entry point : 0x00000000

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00000268, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x00000268, Max: 0x00080000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000070   Code   RO            1    RESET               startup.o
    0x00000070   0x00000008   Code   RO          164  * !!!main             c_t.l(__main.o)
    0x00000078   0x00000002   Code   RO          197    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x0000007a   0x00000000   Code   RO          206    .ARM.Collect$$libinit$$00000002  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          209    .ARM.Collect$$libinit$$00000008  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          211    .ARM.Collect$$libinit$$0000000A  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          213    .ARM.Collect$$libinit$$0000000C  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          216    .ARM.Collect$$libinit$$0000000F  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          218    .ARM.Collect$$libinit$$00000011  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          220    .ARM.Collect$$libinit$$00000013  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          222    .ARM.Collect$$libinit$$00000015  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          224    .ARM.Collect$$libinit$$00000017  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          226    .ARM.Collect$$libinit$$00000019  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          228    .ARM.Collect$$libinit$$0000001B  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          230    .ARM.Collect$$libinit$$0000001D  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          232    .ARM.Collect$$libinit$$0000001F  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          234    .ARM.Collect$$libinit$$00000021  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          236    .ARM.Collect$$libinit$$00000023  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          240    .ARM.Collect$$libinit$$0000002A  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          242    .ARM.Collect$$libinit$$0000002C  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          244    .ARM.Collect$$libinit$$0000002E  c_t.l(libinit2.o)
    0x0000007a   0x00000000   Code   RO          246    .ARM.Collect$$libinit$$00000030  c_t.l(libinit2.o)
    0x0000007a   0x0000000c   Code   RO          247    .ARM.Collect$$libinit$$00000031  c_t.l(libinit2.o)
    0x00000086   0x00000004   Code   RO          270    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x0000008a   0x00000000   Code   RO          281    .ARM.Collect$$libshutdown$$00000003  c_t.l(libshutdown2.o)
    0x0000008a   0x00000000   Code   RO          284    .ARM.Collect$$libshutdown$$00000006  c_t.l(libshutdown2.o)
    0x0000008a   0x00000000   Code   RO          287    .ARM.Collect$$libshutdown$$00000009  c_t.l(libshutdown2.o)
    0x0000008a   0x00000000   Code   RO          289    .ARM.Collect$$libshutdown$$0000000B  c_t.l(libshutdown2.o)
    0x0000008a   0x00000000   Code   RO          292    .ARM.Collect$$libshutdown$$0000000E  c_t.l(libshutdown2.o)
    0x0000008a   0x00000006   Code   RO          293    .ARM.Collect$$libshutdown$$0000000F  c_t.l(libshutdown2.o)
    0x00000090   0x00000000   Code   RO          166    .ARM.Collect$$rtentry$$00000000  c_t.l(rtentry.o)
    0x00000090   0x00000000   Code   RO          172    .ARM.Collect$$rtentry$$00000002  c_t.l(rtentry2.o)
    0x00000090   0x00000008   Code   RO          184    .ARM.Collect$$rtentry$$00000004  c_t.l(rtentry4.o)
    0x00000098   0x00000000   Code   RO          174    .ARM.Collect$$rtentry$$00000009  c_t.l(rtentry2.o)
    0x00000098   0x00000004   Code   RO          175    .ARM.Collect$$rtentry$$0000000A  c_t.l(rtentry2.o)
    0x0000009c   0x00000000   Code   RO          177    .ARM.Collect$$rtentry$$0000000C  c_t.l(rtentry2.o)
    0x0000009c   0x00000028   Code   RO          178    .ARM.Collect$$rtentry$$0000000D  c_t.l(rtentry2.o)
    0x000000c4   0x00000004   Code   RO          203    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x000000c8   0x00000000   Code   RO          252    .ARM.Collect$$rtexit$$00000002  c_t.l(rtexit2.o)
    0x000000c8   0x00000004   Code   RO          253    .ARM.Collect$$rtexit$$00000003  c_t.l(rtexit2.o)
    0x000000cc   0x00000008   Code   RO          254    .ARM.Collect$$rtexit$$00000004  c_t.l(rtexit2.o)
    0x000000d4   0x000000bc   Code   RO            6    .text               task.o
    0x00000190   0x00000060   Code   RO          188    .text               c_t.l(sys_stackheap_outer.o)
    0x000001f0   0x0000000c   Code   RO          190    .text               c_t.l(exit.o)
    0x000001fc   0x0000000c   Code   RO          198    .text               c_t.l(libspace.o)
    0x00000208   0x00000050   Code   RO          201    .text               c_t.l(sys_stackheap.o)
    0x00000258   0x00000004   Code   RO          248    .text               c_t.l(use_no_semi.o)
    0x0000025c   0x00000000   Code   RO          250    .text               c_t.l(indicate_semi.o)
    0x0000025c   0x0000000c   Code   RO          262    .text               c_t.l(sys_exit.o)
    0x00000268   0x00000000   Data   RO          326    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x40000000, Size: 0x00000060, Max: 0x00008000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40000000   0x00000060   Zero   RW          199    .bss                c_t.l(libspace.o)

